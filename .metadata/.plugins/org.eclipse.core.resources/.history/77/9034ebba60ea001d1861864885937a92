package com.shop.order;

import java.util.List;
import java.util.NoSuchElementException;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Pageable;
import org.springframework.data.domain.Sort;
import org.springframework.stereotype.Service;

import com.shop.checkout.CheckoutInfo;
import com.shop.common.entity.Address;
import com.shop.common.entity.CartItem;
import com.shop.common.entity.Customer;
import com.shop.common.entity.Order;
import com.shop.common.entity.PaymentMethod;

@Service
public class OrderService {
	public static final int ORDERS_PER_PAGE = 3;

	@Autowired private OrderRepository orderRepository;
	
	public Page<Order> findByOrder(Integer pageNum, String sortDir, String sortField, Customer customer){
		Sort sort = Sort.by(sortField);
		sort = sortDir.equals("asc") ? sort.ascending() : sort.descending();
		Pageable pageable = PageRequest.of(pageNum - 1, ORDERS_PER_PAGE, sort);
		return orderRepository.findByCustomer(customer, pageable);
	}
	
	public Order createOrder(Customer customer, Address address, List<CartItem> cartItems,
			PaymentMethod paymentMethod, CheckoutInfo checkoutInfo) {
		Order newOrder = new Order();
		
	}
	
	public Order get(Integer id) throws OrderNotFoundException {
		try {
			return orderRepository.findById(id).get();
		}catch(NoSuchElementException ex) {
			throw new OrderNotFoundException("Could not found order with id: "+id);
		}
	}
}
